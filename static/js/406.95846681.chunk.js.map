{"version":3,"file":"static/js/406.95846681.chunk.js","mappings":"mNACA,EAA6B,+B,SCY7B,EATwC,SAAC,GAAuB,IAAtBA,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,GAAIC,EAAU,EAAVA,KACjD,OACI,iBAAKC,UAAWC,EAAhB,WACI,gBAAKC,IAAKL,EAAOM,IAAI,MACrB,SAAC,KAAD,CAASC,GAAE,kBAAaN,GAAxB,SAA+BC,MAG1C,E,UCRKM,EAAWC,EAAAA,GAAAA,IAAH,qEACU,qBAAGC,MAAkBC,IAArB,IACX,qBAAGD,MAAkBE,YAArB,IAWb,EARyC,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACvC,OACI,0BACI,SAACL,EAAD,UAAWK,KAGtB,E,6BCID,GAAeC,EAAAA,EAAAA,GAAqC,CAAEC,KAAM,eAA5D,EAT4E,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAC3E,OACI,kBAAMC,SAAUD,EAAhB,WACKE,EAAAA,EAAAA,IAAuC,aAAc,cAAe,WAAY,CAAEC,KAAM,QAAU,GAAI,KACvG,SAACC,EAAA,EAAD,CAAWC,SAAS,mBAG/B,ICTKC,EAAgBb,EAAAA,GAAAA,IAAH,kUAYE,qBAAGC,MAAkBE,YAArB,IAgCrB,EApBqC,SAAC,GAAsC,IAArCW,EAAoC,EAApCA,QAASC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,YAKtD,OACI,UAACH,EAAD,YACI,iBAAKnB,UAAU,aAAf,WACI,gBAAKA,UAAU,eAAf,SACKoB,EAAQG,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAD,CAAY1B,GAAI0B,EAAE1B,GAAIC,KAAMyB,EAAEzB,KAAMF,MAAO2B,EAAE3B,OAAY2B,EAAE1B,GAA/D,OAElB,gBAAKE,UAAU,gBAAf,SACKqB,EAASE,KAAI,SAAAE,GAAC,OAAI,SAAC,EAAD,CAAaf,QAASe,EAAEf,SAAce,EAAE3B,GAA5C,UAGvB,SAAC,EAAD,CAAagB,SAbC,SAACY,GACnBJ,EAAYI,EAASC,YACxB,MAcJ,E,+EC7CGC,EAA6B,SAACC,GAC/B,MAAO,CACJC,OAAQD,EAAME,KAAKD,OAExB,E,UCNYE,EAAa,SAACH,GACxB,OAAOA,EAAMI,YAAYb,OAC3B,EACYc,EAAc,SAACL,GACzB,OAAOA,EAAMI,YAAYZ,QAC3B,ECaD,GAAec,EAAAA,EAAAA,KFViB,SAACC,GAAe,IAEvCC,EAFsC,0IAGzC,WACG,OAAKC,KAAKC,MAAMT,QACT,SAACM,GAAD,UAAeE,KAAKC,SADI,SAAC,KAAD,CAAUnC,GAAG,UAE9C,KANwC,GAEZoC,EAAAA,WAOhC,OAAOC,EAAAA,EAAAA,IAAQb,EAARa,CAAoCJ,EAC7C,IECGI,EAAAA,EAAAA,KARoB,SAACZ,GACrB,MAAO,CACHT,QAASY,EAAWH,GACpBR,SAAUa,EAAYL,GAE7B,GAG2F,CAAEP,YAAaoB,EAAAA,EAAAA,cAD3G,CAECC,E","sources":["webpack://react-social-network/./src/components/Dialogs/DialogItem/DialogItem.module.css?beb9","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/MessageItem/MessageItem.tsx","components/Dialogs/DialogsForm.tsx","components/Dialogs/Dialogs.tsx","components/HOC/withAuthRedirect.jsx","redux/selectors/dialogs-selectors.ts","components/Dialogs/DialogsContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogItem\":\"DialogItem_dialogItem__Xmf3g\"};","import React from \"react\";\nimport { NavLink } from 'react-router-dom';\nimport styles from './DialogItem.module.css';\ntype PropsType = { photo: string, id: number, name: string }\nconst DialogItem: React.FC<PropsType> = ({photo, id, name}) => {\n    return (\n        <div className={styles.dialogItem}>\n            <img src={photo} alt=\"\" />\n            <NavLink to={`/dialog/${id}`}>{name}</NavLink>\n        </div>\n    );\n}\n\nexport default DialogItem;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Messages = styled.div`\n    background-color: ${({ theme }) => theme.body};\n    color: ${({ theme }) => theme.headersColor};\n`;\ntype PropsType = { message: string }\nconst MessageItem: React.FC<PropsType> = ({message}) => {\n    return (\n        <div>\n            <Messages>{message}</Messages>\n        </div>\n    );\n}\n\nexport default MessageItem;","import React from \"react\";\nimport { reduxForm, InjectedFormProps } from 'redux-form';\nimport { SimpleBtn } from \"../../common/Buttons/SimpleButton/SimpleBtn\";\nimport { createField } from \"../../common/FormControls/FormControl\";\nimport { DialogsFormDataValuesType } from \"./Dialogs\";\n\n\ntype DialogsFormValuesTypeKeys = Extract<keyof DialogsFormDataValuesType, string>\n\nconst DialogsForm: React.FC<InjectedFormProps<DialogsFormDataValuesType>> = ({ handleSubmit }) => {\n    return (\n        <form onSubmit={handleSubmit}>\n            {createField<DialogsFormValuesTypeKeys>('Enter text', 'sentMessage', 'textarea', { type: 'text' }, \"\", [])}\n            <SimpleBtn btn_text='Send Message' />\n        </form>\n    );\n}\n\nexport default reduxForm<DialogsFormDataValuesType>({ form: 'dialogsForm' })(DialogsForm);","import React from \"react\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport MessageItem from \"./MessageItem/MessageItem\";\nimport DialogsForm from \"./DialogsForm\";\nimport {DialogsType, MessagesType} from '../../redux/dialogs-reducer';\nimport styled from \"styled-components\";\n\nconst StyledDialogs = styled.div`\n    padding: 0px 30px;\n    .dialogsRow{\n        display: flex;\n        justify-content: flex-start;\n        gap: 50px;\n        font-size: 22px;\n        margin-bottom: 30px;\n    }\n    .dialogsBlock{\n        a{\n            text-decoration: none;\n            color: ${({ theme }) => theme.headersColor};\n        }\n    }\n`;\ntype PropsType = {\n    dialogs: Array<DialogsType>\n    messages: Array<MessagesType>\n    sendMessage: (message: string) => void\n}\nexport type DialogsFormDataValuesType = {\n    sentMessage: string\n}\nconst Dialogs: React.FC<PropsType> = ({dialogs, messages, sendMessage}) => {\n\n    const onSendMessage = (formData: DialogsFormDataValuesType) => {\n        sendMessage(formData.sentMessage);\n    }\n    return (\n        <StyledDialogs>\n            <div className='dialogsRow'>\n                <div className='dialogsBlock'>\n                    {dialogs.map(d => <DialogItem id={d.id} name={d.name} photo={d.photo} key={d.id}/>)}\n                </div>\n                <div className='messagesBlock'>\n                    {messages.map(m => <MessageItem message={m.message} key={m.id}/>)}\n                </div>\n            </div>\n            <DialogsForm onSubmit={onSendMessage}/>\n        </StyledDialogs>\n    );\n}\n\nexport default Dialogs;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nlet mapStateToPropsForRedirect = (state) => {\n   return {\n      isAuth: state.auth.isAuth,\n   }\n}\n\nexport const withAuthRedirect = (Component) => {\n\n   class RedirectComponent extends React.Component {\n      render() {\n         if (!this.props.isAuth) return <Navigate to='/login' />;\n         return <Component {...this.props} />\n      }\n   }\n\n   return connect(mapStateToPropsForRedirect)(RedirectComponent);\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import { AppStateType } from \"../redux-store\";\n\nexport const getDialogs = (state: AppStateType) => {\n   return state.dialogsPage.dialogs;\n}\nexport const getMessages = (state: AppStateType) => {\n   return state.dialogsPage.messages;\n}","import Dialogs from './Dialogs';\nimport { actions } from '../../redux/dialogs-reducer';\nimport { connect } from 'react-redux';\nimport { withAuthRedirect } from '../HOC/withAuthRedirect';\nimport { compose } from 'redux';\nimport { AppStateType } from '../../redux/redux-store';\nimport { DialogsType, MessagesType } from '../../redux/dialogs-reducer';\nimport { getDialogs, getMessages } from '../../redux/selectors/dialogs-selectors';\nimport React from 'react';\n\ntype MapStateToPropsType = { dialogs: Array<DialogsType>, messages: Array<MessagesType> }\ntype MapDispatchToPropsType = { sendMessage: (message: string) => void }\n\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\n    return {\n        dialogs: getDialogs(state),\n        messages: getMessages(state),\n    }\n}\n\nexport default compose<React.ComponentType>(withAuthRedirect,  \n    connect<MapStateToPropsType, MapDispatchToPropsType, {}, AppStateType>(mapStateToProps, { sendMessage: actions.sendMessage }))\n(Dialogs);"],"names":["photo","id","name","className","styles","src","alt","to","Messages","styled","theme","body","headersColor","message","reduxForm","form","handleSubmit","onSubmit","createField","type","SimpleBtn","btn_text","StyledDialogs","dialogs","messages","sendMessage","map","d","m","formData","sentMessage","mapStateToPropsForRedirect","state","isAuth","auth","getDialogs","dialogsPage","getMessages","compose","Component","RedirectComponent","this","props","React","connect","actions","Dialogs"],"sourceRoot":""}